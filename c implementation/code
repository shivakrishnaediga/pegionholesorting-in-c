#include <stdio.h>
#include <stdlib.h>
// Function to perform Pigeonhole Sort
void pigeonhole_sort(int arr[], int n) {
    int min = arr[0], max = arr[0];
    // Find minimum and maximum values in the array
    for (int i = 1; i < n; i++) {
        if (arr[i] < min) min = arr[i];
        if (arr[i] > max) max = arr[i];
    }
    int range = max - min + 1;
    int holes[range];
    for (int i = 0; i < range; i++) {
        holes[i] = 0;
    }
    // Populate pigeonholes with frequency of elements
    for (int i = 0; i < n; i++) {
        holes[arr[i] - min]++;
    }
    // Put elements back into the original array
    int index = 0;
    for (int i = 0; i < range; i++) {
        while (holes[i] > 0) {
            arr[index++] = i + min;
            holes[i]--;
        }
    }
}
// Function to read input from a file
void read_input(const char *filename, int arr[], int *n) {
    FILE *file = fopen(filename, "r");
    if (file == NULL) {
        printf("Error opening the file.\n");
        exit(1);
    }
    *n = 0;
    int num;
    while (fscanf(file, "%d", &num) == 1) {
        arr[(*n)++] = num;
    }
    fclose(file);
}
// Function to print array elements
void print_array(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
}
// Main function
int main() {
    const char *filename = "input.txt"; // Change the filename to your input file
    int arr[1000];
    int n, tests;
    FILE *inputFile = fopen(filename, "r");
    if (inputFile == NULL) {
        printf("Error opening the file.\n");
        return 1;
    }
    fscanf(inputFile, "%d", &tests);
    for (int i = 0; i < tests; i++) {
        read_input(filename, arr, &n);
        printf("Unsorted array: ");
        print_array(arr, n);
        pigeonhole_sort(arr, n);
        printf("Sorted array: ");
        print_array(arr, n);
    }
    fclose(inputFile);
    return 0;
}
